"""Initial migration

Revision ID: 72f146ffef96
Revises:
Create Date: 2025-03-21 22:49:28.258765

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "72f146ffef96"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "gameserver",
        sa.Column("identifier", sa.Uuid(), nullable=False),
        sa.Column("validation_token", sa.Uuid(), nullable=False),
        sa.Column(
            "registered_server_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column(
            "last_modified",
            sa.TIMESTAMP(timezone=True),
            nullable=False,
            onupdate=lambda: sa.TIMESTAMP(timezone=True),
        ),
        sa.PrimaryKeyConstraint("identifier"),
    )
    op.create_index(
        op.f("ix_gameserver_identifier"), "gameserver", ["identifier"], unique=False
    )
    op.create_table(
        "user",
        sa.Column("identifier", sa.Uuid(), nullable=False),
        sa.Column("username", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("key_token", sa.Uuid(), nullable=False),
        sa.Column(
            "main_class",
            sa.Enum(
                "RUNNER",
                "FIREBUG",
                "ROCKETMAN",
                "OVERWEIGHT",
                "DETONATOR",
                "HEALER",
                "CONSTRUCTOR",
                "RIFLEMAN",
                "INFILTRATOR",
                "QUOTE",
                name="gameclass",
            ),
            nullable=False,
        ),
        sa.Column("points", sa.Integer(), nullable=False),
        sa.Column("last_joined_server", sa.Uuid(), nullable=True),
        sa.Column("session_token", sa.Uuid(), nullable=True),
        sa.Column("server_validated_session", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column(
            "last_modified",
            sa.TIMESTAMP(timezone=True),
            nullable=False,
            onupdate=lambda: sa.TIMESTAMP(timezone=True),
        ),
        sa.ForeignKeyConstraint(
            ["last_joined_server"],
            ["gameserver.identifier"],
        ),
        sa.PrimaryKeyConstraint("identifier"),
    )
    op.create_index(op.f("ix_user_identifier"), "user", ["identifier"], unique=False)
    op.create_index(op.f("ix_user_key_token"), "user", ["key_token"], unique=True)
    op.create_index(
        op.f("ix_user_session_token"), "user", ["session_token"], unique=True
    )
    op.create_table(
        "contract",
        sa.Column("identifier", sa.Uuid(), nullable=False),
        sa.Column(
            "contract_type",
            sa.Enum(
                "KILLS",
                "KILLS_ON_CLASS",
                "KILLS_AS_CLASS",
                "HEALING",
                "UBERS",
                "ROUNDS_PLAYED",
                "ROUNDS_WON",
                "DEBUG",
                name="contracttype",
            ),
            nullable=False,
        ),
        sa.Column("value", sa.Integer(), nullable=False),
        sa.Column("target_value", sa.Integer(), nullable=False),
        sa.Column(
            "game_class",
            sa.Enum(
                "RUNNER",
                "FIREBUG",
                "ROCKETMAN",
                "OVERWEIGHT",
                "DETONATOR",
                "HEALER",
                "CONSTRUCTOR",
                "RIFLEMAN",
                "INFILTRATOR",
                "QUOTE",
                name="gameclass",
            ),
            nullable=False,
        ),
        sa.Column("completed", sa.Boolean(), nullable=False),
        sa.Column("points", sa.Integer(), nullable=False),
        sa.Column("user_identifier", sa.Uuid(), nullable=False),
        sa.Column("validated_by_identifier", sa.Uuid(), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column(
            "last_modified",
            sa.TIMESTAMP(timezone=True),
            nullable=False,
            onupdate=lambda: sa.TIMESTAMP(timezone=True),
        ),
        sa.ForeignKeyConstraint(
            ["user_identifier"],
            ["user.identifier"],
        ),
        sa.ForeignKeyConstraint(
            ["validated_by_identifier"],
            ["gameserver.identifier"],
        ),
        sa.PrimaryKeyConstraint("identifier"),
    )
    op.create_index(
        op.f("ix_contract_identifier"), "contract", ["identifier"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_contract_identifier"), table_name="contract")
    op.drop_table("contract")
    op.drop_index(op.f("ix_user_session_token"), table_name="user")
    op.drop_index(op.f("ix_user_key_token"), table_name="user")
    op.drop_index(op.f("ix_user_identifier"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_gameserver_identifier"), table_name="gameserver")
    op.drop_table("gameserver")
    # ### end Alembic commands ###
